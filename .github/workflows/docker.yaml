name: docker
on:
  push:
    tags:
    - '*'
jobs:
  build-docker:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            platformdashes: linux-amd64
          - platform: linux/arm64
            platformdashes: linux-arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_REPO }}
          tags: |
            type=sha,format=long,prefix=${{ matrix.platformdashes }}-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.docker/Dockerfile
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  merge-multiplatform-images:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_REPO }}
          sep-tags: ","
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Merge multiplatform docker images
        run: |
          set -eu -o pipefail
          IFS=, tags="${{ steps.docker_meta.outputs.tags }}"
          for tag in $tags; do docker buildx imagetools create --tag $tag ${{ secrets.DOCKERHUB_REPO }}:linux-amd64-${{ github.sha }} ${{ secrets.DOCKERHUB_REPO }}:linux-arm64-${{ github.sha }}; done